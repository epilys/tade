# Generated by Django 3.1.3 on 2021-08-14 14:52

from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("tade", "0065_add_indices"),
    ]

    operations = [
        migrations.RunSQL(
            sql=[
                (
                    """CREATE VIEW taggregationhastag_exacttag AS
SELECT
    tag_id,
    exclude_filter.taggregationhastag_id AS has_id
FROM
    tade_taggregationhastag_exclude_filters AS exclude_filter,
    tade_exacttagfilter AS exact_tag
WHERE
    exclude_filter.storyfilter_id = exact_tag.storyfilter_ptr_id;""",
                    [],
                )
            ],
            reverse_sql=[("DROP VIEW taggregationhastag_exacttag", [])],
        ),
        migrations.RunSQL(
            sql=[
                (
                    """CREATE VIEW taggregation_tags AS WITH RECURSIVE w (
    taggregation_id,
    tag_id,
    depth,
    taggregationhastag_id
) AS (
    SELECT DISTINCT
        taggregation_id,
        tag_id,
        depth,
        id
    FROM
        tade_taggregationhastag
    UNION ALL
    SELECT
        w.taggregation_id AS taggregation_id,
        p.from_tag_id AS tag_id,
        (
            CASE w.depth
            WHEN NULL THEN
                w.depth
            ELSE
                w.depth - 1
            END),
        taggregationhastag_id
    FROM
        tade_tag_parents AS p
        JOIN w ON w.tag_id = p.to_tag_id
    WHERE
        (w.depth != 0 OR w.depth ISNULL)
        AND p.from_tag_id NOT IN (
            SELECT
                tag_id
            FROM
                taggregationhastag_exacttag)
) SELECT DISTINCT
    taggregation_id,
    tag_id,
    depth,
    taggregationhastag_id as has_id
FROM
    w;""",
                    [],
                )
            ],
            reverse_sql=[("DROP VIEW taggregation_tags;", [])],
        ),
        migrations.RunSQL(
            sql=[
                (
                    """CREATE VIEW userfilter AS
SELECT
    user_id,
    exclude_filter.taggregationhastag_id AS has_id
FROM
    tade_taggregationhastag_exclude_filters AS exclude_filter,
    tade_userfilter AS userfilter
WHERE
    exclude_filter.storyfilter_id = userfilter.storyfilter_ptr_id;""",
                    [],
                )
            ],
            reverse_sql=[("DROP VIEW userfilter;", [])],
        ),
        migrations.RunSQL(
            sql=[
                (
                    """CREATE VIEW domainfilter AS
SELECT
    match_string,
    is_regexp,
    exclude_filter.taggregationhastag_id AS has_id
FROM
    tade_taggregationhastag_exclude_filters AS exclude_filter,
    tade_matchfilter AS matchfilter,
    tade_domainfilter AS domainfilter
WHERE
    exclude_filter.storyfilter_id = matchfilter.storyfilter_ptr_id;""",
                    [],
                )
            ],
            reverse_sql=[("DROP VIEW domainfilter;", [])],
        ),
        migrations.RunSQL(
            sql=[
                (
                    """CREATE VIEW taggregation_stories AS SELECT DISTINCT
    s.id AS id,
    v.has_id AS has_id,
    v.taggregation_id AS taggregation_id
FROM
    tade_story AS s
    JOIN tade_story_tags AS t ON t.story_id = s.id
    JOIN taggregation_tags AS v ON v.tag_id = t.tag_id
WHERE
    NOT EXISTS (
        SELECT
            1
        FROM
            domainfilter AS df
        WHERE
            df.has_id = v.has_id
            AND ((df.match_string = s.domain_id AND NOT df.is_regexp)))
    AND NOT EXISTS (
        SELECT
            1
        FROM
            domainfilter AS df
        WHERE
            df.has_id = v.has_id
            AND ((REGEXP (df.match_string, s.domain_id) AND df.is_regexp)))
    AND NOT EXISTS (
        SELECT
            1
        FROM
            userfilter AS uf
        WHERE
            uf.has_id = v.has_id
            AND uf.user_id = s.user_id);""",
                    [],
                )
            ],
            reverse_sql=[("DROP VIEW taggregation_stories;", [])],
        ),
    ]
